// Generated by CoffeeScript 1.6.3
var ScheduleData, ScheduleLayout, TimeSlotView, TimeSlots, _ref, _ref1, _ref2, _ref3,
  __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

ScheduleLayout = (function(_super) {
  __extends(ScheduleLayout, _super);

  function ScheduleLayout() {
    _ref = ScheduleLayout.__super__.constructor.apply(this, arguments);
    return _ref;
  }

  ScheduleLayout.prototype.template = '#schedule-layout';

  ScheduleLayout.prototype.regions = {
    list: '.schedule-list'
  };

  ScheduleLayout.prototype.initialize = function() {
    this.data = new ScheduleData;
    return this.listenTo(this.data, 'sync', this.showSchedule);
  };

  ScheduleLayout.prototype.onRender = function() {
    return this.data.fetch();
  };

  ScheduleLayout.prototype.showSchedule = function() {
    return this.list.show(new TimeSlots({
      collection: this.data
    }));
  };

  return ScheduleLayout;

})(Backbone.Marionette.Layout);

TimeSlotView = (function(_super) {
  __extends(TimeSlotView, _super);

  function TimeSlotView() {
    _ref1 = TimeSlotView.__super__.constructor.apply(this, arguments);
    return _ref1;
  }

  TimeSlotView.prototype.template = '#slot-item';

  TimeSlotView.prototype.className = 'time-slot';

  TimeSlotView.prototype.tagName = 'section';

  return TimeSlotView;

})(Backbone.Marionette.ItemView);

TimeSlots = (function(_super) {
  __extends(TimeSlots, _super);

  function TimeSlots() {
    _ref2 = TimeSlots.__super__.constructor.apply(this, arguments);
    return _ref2;
  }

  TimeSlots.prototype.itemView = TimeSlotView;

  TimeSlots.prototype.className = 'section-container accordion';

  TimeSlots.prototype.attributes = {
    "data-section": "accordion"
  };

  return TimeSlots;

})(Backbone.Marionette.CollectionView);

ScheduleData = (function(_super) {
  __extends(ScheduleData, _super);

  function ScheduleData() {
    _ref3 = ScheduleData.__super__.constructor.apply(this, arguments);
    return _ref3;
  }

  ScheduleData.prototype.url = "http://thehackerolympics.com/js/src/schedule.json";

  ScheduleData.prototype.initialize = function() {
    return this.slots = {
      slot1: '6:30',
      slot2: '6:45',
      slot3: '6:30',
      slot4: '6:45',
      slot5: '7:00',
      slot6: '7:15',
      slot7: '7:30',
      slot8: '7:45',
      slot9: '8:00',
      slot10: '8:15',
      slot11: '8:30',
      slot12: '8:45',
      slot13: '9:00',
      slot14: '9:15',
      slot15: '9:30',
      slot16: '9:45',
      slot17: '10:00'
    };
  };

  ScheduleData.prototype.parse = function(response) {
    var _this = this;
    _.each(response, function(item) {
      return _.each(item, function(val, key) {
        var charadeBooth;
        if (typeof val !== "number") {
          if (val.indexOf("startupcharades") !== -1) {
            charadeBooth = val.split("_")[1];
            item['charadeTime'] = _this.slots[key];
            item['charadeBooth'] = charadeBooth;
          }
          if (key !== 'team' && key !== 'teamName') {
            item[val] = _this.slots[key];
            return console.log(item);
          }
        }
      });
    });
    return response;
  };

  return ScheduleData;

})(Backbone.Collection);

$(document).ready(function() {
  var sc;
  sc = new ScheduleLayout({
    el: "#schedule"
  });
  return sc.render();
});
